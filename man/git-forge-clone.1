.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "git-forge-clone" 1 "Jan 2021" "Linux" "git-forge-clone"
.SH NAME
git-forge-clone \- clone a repository on a forge to your local system 
.SH "SYNOPSIS"

.nf
\fBgit forge clone <subcommand> [options]\fR
.fi

.SH "DESCRIPTION"

.PP
git forge clone works exactly as git clone does, but adds the ability to
communicate with the forge, identifying the parent repository of the requested
clone, and creating an additional remote to that parent.  This is useful when
creating pull requests and reviewing issues.

.SH "USAGE"
.TP
.SS clone [options] <url>

The clone command creates a local copy of the url provided.  Its is a superset
of the git clone command 

.TP
.I Options

.TP
.B -h 
Display help text

.TP
.B --getparent
When specified, look up the parent repository of the repo being cloned, and
create a second remote leading to that parent.  By default the child and parent
remotes are named origin and orign-parent.  This is useful when creating pull
requests

